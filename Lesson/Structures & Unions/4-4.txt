Pointers to Unions

Một con trỏ tới một liên minh trỏ đến vị trí bộ nhớ được cấp phát cho liên minh.
Một con trỏ liên hợp được khai báo bằng cách sử dụng từ khóa union và thẻ union cùng với * và tên con trỏ.
Ví dụ, hãy xem xét các câu sau:


#include <stdio.h>
#include <string.h>

union val {
  int int_num;
  float fl_num;
  char str[20]; 
};

int main() {  
  union val info;
  union val *ptr = NULL;
  ptr = &info;
  ptr->int_num = 10;
  printf("info.int_num is %d", info.int_num);
  return 0;
}

(*ptr).int_num tương đương ptr->int_num. 

->
union val {

  int int_num;

  float fl_num;

};

union val info;

union val *ptr =&info;


Unions as Function Parameters

ví dụ:

union id {
  int id_num;
  char name[20]; 
};

void set_id(union id *item) {
  item->id_num = 42;
}

void show_id(union id item) {
  printf("ID is %d", item.id_num);
} 



-> union passport {

  int id_num;

  char text[20];

};

void show(union passport p) {

  printf("ID is %d", p.id_num);

}


Array of Unions


ví dụ:

#include <stdio.h>

union val {
  int int_num;
  float fl_num;
  char str[20]; 
};

int main() {  
  union val nums[10];
  int k;
  
  /* create an array of ints */
  for (k = 0; k < 10; k++) {
    nums[k].int_num = k;
  }
  
  /* display array values */
  for (k = 0; k < 10; k++) {
    printf("%d  ", nums[k].int_num);
  }
  
  return 0;
}

->union test {

  int int_num;

  float fl_num;

};

union test nums[2];

nums[0].int_num = 42;